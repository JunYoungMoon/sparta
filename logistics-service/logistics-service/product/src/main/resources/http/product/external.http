### 환경 변수 설정
@host = http://localhost:19000
@contentType = application/json

### 허브 생성 요청
POST localhost:19000/api/v1/hubs
Content-Type: application/json
X-User-Id: 1
X-User-Role: MASTER_ADMIN

{
  "hubName": "서울특별시 센터",
  "locationApi": {
    "address": "서울특별시 송파구 송파대로 55",
    "latitude": 37.514219,
    "longitude": 127.112628
  }
}
> {%
  client.global.set("hubId", response.body.hubId)
%}

### 업체 생성 요청
# @name createCompany
POST http://localhost:19001/api/v1/companies
Content-Type: {{contentType}}

{
  "companyName": "덜푸른~ 농장",
  "companyType": "SUPPLIER",
  "hubId": "{{hubId}}",
  "address": "서울특별시 강남구 테헤란로 123"
}
> {%
  client.global.set("companyId", response.body.companyId)
%}

### 회원가입 (Signup)
POST http://localhost:19000/api/v1/users/signup
Content-Type: application/json

{
  "username": "testuser7",
  "slackEmail": "testuser7@email.com",
  "password": "Password1!",
  "role": "HUB_MANAGER"
}

### 사용자 검증 (비밀번호 확인 및 userId, username, role 반환)
POST http://localhost:19000/api/v1/app/users/validate
Content-Type: application/json

{
  "username": "testuser7",
  "password": "Password1!"
}

> {%
  if (response.body.userId) {
    client.global.set("user_id", response.body.userId.toString());
  } else {
    throw new Error("userId가 응답에 존재하지 않음");
  }
  client.global.set("username", response.body.username);
  client.global.set("role", response.body.role);
%}

### 로그인 (JWT 발급)
POST http://localhost:19000/api/v1/auth/login
Content-Type: application/json

{
  "username": "testuser7",
  "password": "Password1!"
}
> {%
  let authHeader = response.headers.valueOf("Authorization");
  if (authHeader) {
    client.global.set("access_token", authHeader);
  } else {
    throw new Error("Authorization 헤더가 응답에 존재하지 않음");
  }
%}

### 사용자 정보 조회 (Gateway에서 X-User-Id, X-User-Role 전달 확인)
GET {{user}}/api/v1/users/1
Authorization: Bearer {{access_token}}
X-User-Id: {{user_id}}
X-User-Role: {{role}}


### 상품 생성 요청 (재고 수량 지정) - ID 저장
# @name createProduct
POST http://localhost:19001/api/v1/products
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwicm9sZSI6IkhVQl9NQU5BR0VSIiwiaWF0IjoxNzQyNzYzNzE4LCJleHAiOjE3NDI3NjczMTh9.v8PFZhGBsmmBvdOjx7qhjXMiQHbC6rll_Jldorla1mw
X-User-Id: 123
X-User-Role: MASTER_ADMIN


{
  "name": "유기농 바나나",
  "companyId": "550e8400-e29b-41d4-a716-446655440002",
  "hubId": "550e8400-e29b-41d4-a716-446655440002",
  "quantity": 0
}
> {%
  client.global.set("productId", response.body.productId)
%}

### 상품 생성 요청 (재고 수량 미지정 - 기본값 0 적용)
POST localhost:19000/api/v1/products
Content-Type: {{contentType}}
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwicm9sZSI6IkhVQl9NQU5BR0VSIiwiaWF0IjoxNzQyNzYzNzE4LCJleHAiOjE3NDI3NjczMTh9.v8PFZhGBsmmBvdOjx7qhjXMiQHbC6rll_Jldorla1mw

{
  "name": "프리미엄 사과",
  "companyId": "33df8f81-e526-4587-804d-e5a634d4e131",
  "hubId": "50e9c670-5195-4972-8a95-64d6bc33bbc4",
  "quantity": null
}
###
GET localhost:19000/api/v1/app/users/managers/hub/users?managerId=1
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwicm9sZSI6IkhVQl9NQU5BR0VSIiwiaWF0IjoxNzQyNzYzNzE4LCJleHAiOjE3NDI3NjczMTh9.v8PFZhGBsmmBvdOjx7qhjXMiQHbC6rll_Jldorla1mw

### 상품 생성 요청 (필수 필드만)
POST {{host}}/api/v1/products
Content-Type: {{contentType}}

{
  "name": "신선한 오렌지",
  "companyId": "550e8400-e29b-41d4-a716-446655440003",
  "hubId": "550e8400-e29b-41d4-a716-446655440001"
}

### 상품 이름 수정 요청 - 생성된 ID 사용
# 앞서 생성한 상품의 ID(예: 96c0551e-44d9-4c57-b4fa-e4ea3b9d1c2d)를 사용
PATCH {{host}}/api/v1/products/{{productId}}
Content-Type: {{contentType}}

{
  "name": "프리미엄 유기농 바나나"
}

### 상품 정보 조회 - 생성된 ID 사용
GET {{host}}/api/v1/products/{{productId}}
Content-Type: {{contentType}}

### 상품 정보 삭제 - 생성된 ID 사용
DELETE {{host}}/api/v1/products/{{productId}}
Content-Type: {{contentType}}

### 상품 검색
GET {{host}}/api/v1/products/search
Content-Type: {{contentType}}

### 라우팅확인용
GET http://localhost:19000/actuator/gateway/routes