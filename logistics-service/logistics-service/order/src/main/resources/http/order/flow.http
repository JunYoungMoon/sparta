### 환경 변수 설정
@host = http://localhost:19000
@contentType = application/json

### 이 HTTP 파일은 MSA 환경에서 주문 생성부터 완료까지의 전체 프로세스를 테스트합니다.
### 각 서비스 간 상호작용을 포함한 엔드 투 엔드 테스트 시나리오입니다.

### 1. 마스터 어드민 계정 생성
POST {{host}}/api/v1/users/signup
Content-Type: {{contentType}}

{
  "username": "mast",
  "slackEmail": "admin@example.com",
  "password": "Password1!",
  "role": "MASTER_ADMIN"
}

### 2. 로그인 및 토큰 획득
# @name login
POST {{host}}/api/v1/auth/login
Content-Type: {{contentType}}

{
  "username": "mast",
  "password": "Password1!"
}

> {%
  let authHeader = response.headers.valueOf("Authorization");
  if (authHeader) {
    client.global.set("access_token", authHeader);
  }
  client.global.set("user_id", "1"); // 마스터 어드민은 일반적으로 ID 1
  client.global.set("role", "MASTER_ADMIN");
%}

### 3. 허브 생성
# @name createHub
POST {{host}}/api/v1/hubs
Content-Type: {{contentType}}
Authorization: {{access_token}}

{
  "hubName": "서울특별시 물류센터",
  "locationApi": {
    "address": "서울특별시 송파구 송파대로 55",
    "latitude": 37.514219,
    "longitude": 127.112628
  }
}

> {%
  client.global.set("hubId", response.body.hubId);
%}

### 4. 두 번째 허브 생성 (배송 경로 테스트용)
# @name createSecondHub
POST {{host}}/api/v1/hubs
Content-Type: {{contentType}}
Authorization: {{access_token}}

{
  "hubName": "경기도 물류센터",
  "locationApi": {
    "address": "경기도 성남시 분당구 판교로 123",
    "latitude": 37.394776,
    "longitude": 127.110479
  }
}

> {%
  client.global.set("toHubId", response.body.hubId);
%}

### 5. 공급업체 생성
# @name createSupplier
POST {{host}}/api/v1/companies
Content-Type: {{contentType}}
Authorization: {{access_token}}

{
  "companyName": "신선식품 공급사",
  "companyType": "SUPPLIER",
  "hubId": "{{hubId}}",
  "address": "서울특별시 강남구 테헤란로 123"
}

> {%
  client.global.set("supplierId", response.body.companyId);
%}

### 6. 고객사 생성
# @name createClient
POST {{host}}/api/v1/companies
Content-Type: {{contentType}}
Authorization: {{access_token}}

{
  "companyName": "푸드마켓",
  "companyType": "CUSTOMER",
  "hubId": "{{destinationHubId}}",
  "address": "경기도 성남시 분당구 판교로 123"
}

> {%
  client.global.set("clientId", response.body.companyId);
%}

### 7. 허브 매니저 생성
# @name createHubManager
POST {{host}}/api/v1/users/signup
Content-Type: {{contentType}}

{
  "username": "hubmana",
  "slackEmail": "hub@example.com",
  "password": "Password1!",
  "role": "HUB_MANAGER",
  "hubFeignResponse": {
    "hubId": "{{hubId}}",
    "hubName": "서울특별시 물류센터",
    "address": "서울특별시 송파구 송파대로 55",
    "latitude": 37.514219,
    "longitude": 127.112628
  }
}

> {%
  client.global.set("hubManagerId", response.body.userId);
%}

### 8. 허브 매니저 로그인
# @name loginHubManager
POST {{host}}/api/v1/auth/login
Content-Type: {{contentType}}

{
  "username": "hubmana",
  "password": "Password1!"
}

> {%
  let authHeader = response.headers.valueOf("Authorization");
  if (authHeader) {
    client.global.set("hub_manager_token", authHeader);
  }
%}

### 9. 상품 생성
# @name createProduct
POST {{host}}/api/v1/products
Content-Type: {{contentType}}
Authorization: {{hub_manager_token}}

{
  "name": "유기농 바나나",
  "companyId": "{{supplierId}}",
  "hubId": "{{hubId}}",
  "quantity": 100
}

> {%
  client.global.set("product1Id", response.body.productId);
%}

### 10. 두 번째 상품 생성
# @name createSecondProduct
POST {{host}}/api/v1/products
Content-Type: {{contentType}}
Authorization: {{hub_manager_token}}

{
  "name": "신선한 사과",
  "companyId": "{{supplierId}}",
  "hubId": "{{hubId}}",
  "quantity": 150
}

> {%
  client.global.set("product2Id", response.body.productId);
%}

### 11. 고객 계정 생성
# @name createCustomer
POST {{host}}/api/v1/users/signup
Content-Type: {{contentType}}

{
  "username": "customer1",
  "slackEmail": "customer@example.com",
  "password": "Password1!",
  "role": "COMPANY_MANAGER",
  "companyFeignResponse": {
    "companyId": "{{clientId}}",
    "companyName": "푸드마켓",
    "companyType": "CLIENT",
    "hubId": "{{destinationHubId}}",
    "address": "경기도 성남시 분당구 판교로 123",
    "createdAt": "2025-03-24T00:39:45.070923",
    "updatedAt": "2025-03-24T00:39:45.070923"
  }
}

> {%
  client.global.set("customerId", response.body.userId);
%}

### 12. 고객 로그인
# @name loginCustomer
POST {{host}}/api/v1/auth/login
Content-Type: {{contentType}}

{
  "username": "customer1",
  "password": "Password1!"
}

> {%
  let authHeader = response.headers.valueOf("Authorization");
  if (authHeader) {
    client.global.set("customer_token", authHeader);
  }
%}

### 13. 주문 생성
# @name createOrder
POST {{host}}/api/v1/orders
Content-Type: {{contentType}}
Authorization: {{customer_token}}

{
  "supplierId": "{{supplierId}}",
  "companyId": "{{clientId}}",
  "customerId": {{customerId}},
  "orderItems": [
    {
      "productId": "{{product1Id}}",
      "quantity": 10
    },
    {
      "productId": "{{product2Id}}",
      "quantity": 15
    }
  ],
  "deliveryAddress": "경기도 성남시 분당구 판교로 123",
  "requestNotes": "배송 전 연락 부탁드립니다."
}

> {%
  client.global.set("orderId", response.body.orderId);
%}

### 14. 주문 조회 (고객)
# @name searchOrderByCustomer
GET {{host}}/api/v1/orders/search?supplierId={{supplierId}}
Content-Type: {{contentType}}
Authorization: {{customer_token}}

### 15. 주문 조회 (허브 매니저)
# @name searchOrderByHubManager
GET {{host}}/api/v1/orders/search?hubId={{hubId}}
Content-Type: {{contentType}}
Authorization: {{hub_manager_token}}


### 16. 주문 수정 (허브 매니저)
# @name updateOrder
PATCH {{host}}/api/v1/orders/{{orderId}}
Content-Type: {{contentType}}
Authorization: {{hub_manager_token}}

{
  "orderItems": [
    {
      "productId": "{{product1Id}}",
      "quantity": 8
    },
    {
      "productId": "{{product2Id}}",
      "quantity": 12
    }
  ]
}

### 17. 수정된 주문 조회 (고객)
# @name searchUpdatedOrderByCustomer
GET {{host}}/api/v1/orders/search?supplierId={{supplierId}}
Content-Type: {{contentType}}
Authorization: {{customer_token}}

### 18. 주문 삭제 (허브 매니저)
# @name deleteOrder
DELETE {{host}}/api/v1/orders/{{orderId}}
Content-Type: {{contentType}}
Authorization: {{hub_manager_token}}


### 19. 삭제 후 주문 조회 (존재하지 않음 확인)
# @name verifyOrderDeleted
GET {{host}}/api/v1/orders/search?supplierId={{supplierId}}
Content-Type: {{contentType}}
Authorization: {{customer_token}}
