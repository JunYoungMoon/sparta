### 로그인 (JWT 발급)
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "master",
  "password": "Password1!"
}
> {%
  let authHeader = response.headers.valueOf("Authorization");
  if (authHeader) {
    client.global.set("access_token", authHeader);
  } else {
    throw new Error("Authorization 헤더가 응답에 존재하지 않음");
  }
%}

### 컴퍼니 매니저 생성 전 관리자 권한으로 허브가 만들어져야 합니다.
POST {{baseUrl}}/api/v1/hubs
Content-Type: application/json
Authorization: {{access_token}}
#X-User-Id: 123
#X-User-Role: MASTER_ADMIN

{
  "hubName": "테스트 데이터",
  "locationApi": {
    "address": "테스트 주소",
    "latitude": 37.514219,
    "longitude": 127.112628
  }
}
> {%
  client.global.set("hubId", response.body.hubId)
%}

### 2. 업체 조회 또는 생성
# 업체 정보가 필요할 경우, 업체를 조회하거나 생성합니다
POST {{baseUrl}}/api/v1/companies
Content-Type: application/json
Authorization: {{access_token}}

{
  "companyName": "푸른 농장2",
  "companyType": "SUPPLIER",
  "hubId": "{{hubId}}",
  "address": "서울특별시 강남구 테헤란로 123"
}
> {%
  client.global.set("companyId", response.body.companyId)
%}


### 업체 담당자 회원가입 허브와 company가 미리 생성되어야 합니다.
POST {{baseUrl}}/api/v1/users/signup
Content-Type: application/json

{
  "username": "commana",
  "slackEmail": "commana@email.com",
  "password": "Password1!",
  "role": "COMPANY_MANAGER",
  "companyFeignResponse": {
  "companyId": "{{companyId}}",
  "companyName": "푸른 농장",
  "companyType": "SUPPLIER",
  "hubId": "{{hubId}}",
  "address": "서울특별시 강남구 테헤란로 123",
  "createdAt": "2025-03-24T00:39:45.070923",
  "updatedAt": "2025-03-24T00:39:45.070923"
 }
}

### 사용자 검증 (비밀번호 확인 및 userId, username, role 반환)
POST {{baseUrl}}/api/v1/app/users/validate
Content-Type: application/json

{
  "username": "commana",
  "password": "Password1!"
}
> {%
  if (response.body.userId) {
    client.global.set("user_id", response.body.userId.toString());
  } else {
    throw new Error("userId가 응답에 존재하지 않음");
  }
  client.global.set("username", response.body.username);
  client.global.set("role", response.body.role);
%}

### 로그인 (JWT 발급)
POST {{baseUrl}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "commana",
  "password": "Password1!"
}
> {%
  let authHeader = response.headers.valueOf("Authorization");
  if (authHeader) {
    client.global.set("access_token", authHeader);
  } else {
    throw new Error("Authorization 헤더가 응답에 존재하지 않음");
  }
%}