spring:
  application:
    name: gateway
  main:
    web-application-type: reactive  # Spring 애플리케이션이 리액티브 웹 애플리케이션으로 설정됨
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: auth
          uri: lb://auth
          predicates:
            - Path=/api/v1/auth/**,/api/v1/app/auth/**
        - id: user
          uri: lb://user
          predicates:
            - Path=/api/v1/users/**,/api/v1/app/users/**
        - id: user-internal
          uri: lb://user
          predicates:
            - Path=/api/v1/app/users/**
        - id: company
          uri: lb://company
          predicates:
            - Path=/api/v1/companies/**,/api/v1/app/companies/**
        - id: slack
          uri: lb://slack
          predicates:
            - Path=/api/v1/slacks/**,/api/v1/app/slacks/**,/springdoc/openapi3-slack-service.json
        - id: product
          uri: lb://product
          predicates:
            - Path=/api/v1/products/**,/api/v1/app/products/**,/api/v1/stock/**,/api/v1/app/stock/**,/springdoc/openapi3-product-service.json
        - id: hub
          uri: lb://hub
          predicates:
            - Path=/api/v1/hubs/**,/api/v1/app/hubs/**,/api/v1/hubRoutes/**,/api/v1/app/hubRoutes/**,/springdoc/openapi3-hub-service.json
        - id: order
          uri: lb://order
          predicates:
            - Path=/api/v1/orders/**,/api/v1/app/orders**/,,/springdoc/openapi3-order-service.json
        - id: delivery
          uri: lb://delivery
          predicates:
            - Path=/api/v1/deliveries/**,/api/v1/app/deliveries/**,/api/v1/deliveryRoutes/**,/api/v1/app/deliveryRoutes/**,/api/v1/app/deliverySequences/**,,/springdoc/openapi3-delivery-service.json
#      default-filters:
#        - name: AddRequestHeader
#          args:
#            name: Authorization
#            value: "{Authorization}"

springdoc:
  swagger-ui:
    urls[0]:
      name: user
      url: /springdoc/openapi3-user-service.json
    urls[1]:
      name: company
      url: /springdoc/openapi3-company-service.json
    urls[2]:
      name: slack
      url: /springdoc/openapi3-slack-service.json
    urls[3]:
      name: product
      url: /springdoc/openapi3-product-service.json
    urls[4]:
      name: hub
      url: /springdoc/openapi3-hub-service.json
    urls[5]:
      name: order
      url: /springdoc/openapi3-order-service.json
    urls[6]:
      name: auth
      url: /springdoc/openapi3-auth-service.json
    path: /docs
  api-docs:
    enabled: true

server:
  port: 19000

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:18999/eureka/  # Eureka 서버의 URL을 지정

jwt:
  secret: "cJI/zwDDsqA6ZN9XEZ+jnB86KV0iAx7AF4sXHrmEJkg="
  access-expiration: 3600000  # AccessToken 만료 시간 (1시간)
  refresh-expiration: 604800000  # RefreshToken 만료 시간 (7일)

management:
  endpoints:
    web:
      exposure:
        include: "*"  # 모든 액추에이터 엔드포인트 노출
  endpoint:
    gateway:
      enabled: true   # 게이트웨이 액추에이터 활성화

logging:
  level:
    takeoff:
      logistics_service:
        msa:
          gateway:
            security:
              GatewayJwtFilter: DEBUG
