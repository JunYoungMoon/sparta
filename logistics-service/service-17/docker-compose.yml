version: '3.8'

services:
  redis-stack:
    image: redis/redis-stack-server:latest
    container_name: my-redis-stack
    restart: always
    environment:
      REDIS_ARGS: "--requirepass 4yeargap!@34"
    ports:
      - "6379:6379"
    volumes:
      - ./4-year-gap_data/redis_data:/data

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: my-zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      # SASL 인증 활성화
      JVMFLAGS: "-Djava.security.auth.login.config=/etc/zookeeper/zookeeper_jaas.conf"
    volumes:
      - ./zookeeper_server_jass.conf:/etc/zookeeper/zookeeper_jaas.conf

  kafka:
    image: wurstmeister/kafka:latest
    container_name: my-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://192.168.0.16:9092
      KAFKA_LISTENERS: INSIDE://kafka:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      # SASL 설정 추가
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin;User:default"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf" # 클라이언트 연결 시 SASL 인증 사용
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_client_jass.conf:/etc/kafka/kafka_jaas.conf
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: my-kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: default
      SPRING_SECURITY_USER_PASSWORD: 4yeargap!@34
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  mysql:
    image: mysql:8.0.41
    container_name: my-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: Answnsdud!@34  # 루트 계정 비밀번호
      MYSQL_DATABASE: defaultDB           # 생성할 데이터베이스 이름
      MYSQL_USER: default                 # 사용자 계정
      MYSQL_PASSWORD: 4yeargap!@34        # 사용자 비밀번호
    ports:
      - "3306:3306"  # 호스트와 컨테이너의 포트 매핑
    volumes:
      - ./4-year-gap_data/mysql_data:/var/lib/mysql  # 데이터 지속성을 위한 볼륨

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
