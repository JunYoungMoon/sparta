server:
  port: 19095  # 게이트웨이 서비스가 실행될 포트 번호

spring:
  main:
    web-application-type: reactive  # Spring 애플리케이션이 리액티브 웹 애플리케이션으로 설정됨
  application:
    name: gateway-service  # 애플리케이션 이름을 'gateway-service'로 설정
  cloud:
    gateway:
      routes:  # Spring Cloud Gateway의 라우팅 설정
        - id: order-service  # 라우트 식별자
          uri: lb://order-service  # 'order-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/api/orders/**

        - id: delivery-service  # 라우트 식별자
          uri: lb://delivery-service  # 'delivery-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/api/deliveries/**

        - id: company-service
          uri: lb://company-service
          predicates:
            - Path=/api/products/**. Path=/api/companies/**

        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /api/auth/$\{segment}  # /auth/** 경로를 /api/auth/**로 변경

        - id: user-service  # 라우트 식별자
          uri: lb://user-service  # 'user-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/users/**  # /users/** 경로로 들어오는 요청을 이 라우트로 처리
          filters:
            - RewritePath=/users/(?<segment>.*), /api/users/$\{segment}  # /users/** 경로를 /api/users/**로 변경

        - id: hub-service
          uri: lb://hub-service
          predicates:
            - Path=/api/hubs/**, Path=/api/hub/routes/**

        - id: management-service
          uri: lb://management-service
          predicates:
            - Path=/api/slack/**
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정

eureka:
  client:
    service-url:
      defaultZone: http://${Eureka_name}:${Eureka_password}@${Eureka_host}:19090/eureka/

service:
  jwt:
    secret-key: ${Jwt_secret_key}
